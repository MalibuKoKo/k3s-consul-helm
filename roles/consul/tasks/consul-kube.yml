---
- name: Namespace
  k8s_raw:
    name: "{{ namespace }}"
    api_version: v1
    kind: Namespace
    state: "{{ state }}"
  run_once: yes
  when: namespace is not match('^(default|kube-system|kube-public|kube-node-lease)$')

# https://kubernetes.io/docs/reference/access-authn-authz/rbac/#service-account-permissions
- name: ServiceAccount
  k8s_raw:
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: consul-probe
        namespace: "{{ namespace }}" # default or kube-system
      #automountServiceAccountToken: false
  run_once: yes

- shell: "kubectl get serviceaccounts consul-probe -n {{ namespace }} -o json | jq -r '.secrets[] | select(.name | match(\"^consul-probe-token-[a-z0-9]+$\") ) | .name '"
  register: s_secret
  run_once: yes
  when: state|default('present') == 'present'
  changed_when: False

- shell: "kubectl get secret {{ s_secret.stdout }} -n {{ namespace }} -o json | jq -r '.data.token' | base64 -d"
  register: s_token
  run_once: yes
  when: state|default('present') == 'present'
  changed_when: False

- set_fact:
    token: "{{ s_token.stdout }}"
  run_once: yes
  when: state|default('present') == 'present'

- name: &role ClusterRole # Role or ClusterRole
  k8s_raw:
    state: "{{ state }}"
    definition:
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: *role
      metadata:
        name: healthcheck-api
        namespace: "{{ namespace }}"
      rules:
#      - apiGroups:
#        - ''
#        resources:
#        - '*'
#        verbs:
#        - 'get'
      - nonResourceURLs:
        - '/healthz'
        #- ['/apis','/apis/*','/healthz','/healthz/*','/livez','/livez/*','/metrics','/openapi/*','/readyz','/readyz/*','/version']
        verbs:
        - 'get'
#     subjects:
#     - kind: Group
#       name: admin
#       apiGroup: rbac.authorization.k8s.io
  run_once: yes
- name: &rb ClusterRoleBinding # RoleBinding or ClusterRoleBinding
  k8s_raw:
    state: "{{ state }}"
    definition:
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: *rb
      metadata:
        name: healthcheck-api_consul-probe
        namespace: "{{ namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: *role
        name: healthcheck-api
      subjects:
      - kind: ServiceAccount # ServiceAccount or User
        name: consul-probe
        namespace: "{{ namespace }}"
  run_once: yes

---
- name: Fix hostname in /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '127.0.0.1\s+localhost.*$'
    line: "127.0.0.1 localhost {{ ansible_hostname }}"
    owner: root
    group: root
    mode: '0644'

- name: init arch fact
  set_fact:
    arch: "{% if ansible_machine in ['amd64','x86_64'] %}amd64{% elif ansible_machine in ['arm64','aarch64'] %}arm64{% elif 'arm' in ansible_machine %}arm{% endif %}"
  when: install_k3s_skip_download == 'yes'

- name: copy local bin to server
  copy:
    src: "files/bin/k3s-{{ arch }}-{{ install_k3s_version }}"
    dest: /usr/local/bin/k3s
    mode: '0755'
  when: install_k3s_skip_download == 'yes'

- name: define leader
  set_fact:
    init_ip: "{{ ansible_play_hosts | first }}"

- name: define leader ip
  set_fact:
    init_ip: "{{ hostvars[init_ip].ansible_facts[net_interface].ipv4.address }}"

# https://github.com/firewalld/firewalld/issues/519
#- block:
#  - command: cd ~ && wget http://vault.centos.org/7.6.1810/os/x86_64/Packages/firewalld-0.5.3-5.el7.noarch.rpm http://vault.centos.org/7.6.1810/os/x86_64/Packages/firewalld-filesystem-0.5.3-5.el7.noarch.rpm http://vault.centos.org/7.6.1810/os/x86_64/Packages/python-firewall-0.5.3-5.el7.noarch.rpm
#  - command: cd ~ && yum -y downgrade firewalld-0.5.3-5.el7.noarch.rpm firewalld-filesystem-0.5.3-5.el7.noarch.rpm python-firewall-0.5.3-5.el7.noarch.rpm
#  - command: yum -y install yum-versionlock
#  - command: yum versionlock firewalld firewalld-filesystem python-firewall
#  - command: yum -y update
#  when: ansible_os_family == 'RedHat'

- block:
  - name: k3s firewall
    copy:
      content: |
        <?xml version="1.0" encoding="utf-8"?>
        <service>
          <short>K3S API</short>
          <description>K3S API SERVER</description>
          <port protocol="tcp" port="6443"/>
        </service>
      dest: /etc/firewalld/services/k3s.xml
      mode: '0644'
      owner: root
      group: root
    register: k3sf
  - name: reload firewall
    command: firewall-cmd --reload
    when: k3sf.changed
  when: ansible_os_family == 'RedHat'

- name: install k3s server
  script: files/get.k3s.sh
  environment:
    INSTALL_K3S_VERSION: "{{ install_k3s_version }}"
    INSTALL_K3S_EXEC: --node-ip {{ ansible_facts[net_interface].ipv4.address }} {% if ansible_facts[net_interface].ipv4.address in init_ip -%}--cluster-init{% else %}--server https://{{ init_ip }}:6443{%- endif %}
    INSTALL_K3S_SKIP_DOWNLOAD: "{{ install_k3s_skip_download }}"
    K3S_CLUSTER_SECRET: '{{ k3s_cluster_secret }}'
    K3S_KUBECONFIG_OUTPUT: /root/.kube/config
    K3S_KUBECONFIG_MODE: '644'
  ignore_errors: yes

- name: Wait for port 6443 to become open on the host, don't start checking for 60 seconds
  wait_for:
    port: 6443
    delay: 60
  run_once: yes

#- name: fix cannot access NodePort from other machines (iptables rules)
#  # https://stackoverflow.com/questions/46667659/kubernetes-cannot-access-nodeport-from-other-machines
#  shell: iptables -A FORWARD -j ACCEPT